// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/keycloak/keycloak-operator/pkg/apis/keycloak/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KeycloakBackupLister helps list KeycloakBackups.
// All objects returned here must be treated as read-only.
type KeycloakBackupLister interface {
	// List lists all KeycloakBackups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeycloakBackup, err error)
	// KeycloakBackups returns an object that can list and get KeycloakBackups.
	KeycloakBackups(namespace string) KeycloakBackupNamespaceLister
	KeycloakBackupListerExpansion
}

// keycloakBackupLister implements the KeycloakBackupLister interface.
type keycloakBackupLister struct {
	indexer cache.Indexer
}

// NewKeycloakBackupLister returns a new KeycloakBackupLister.
func NewKeycloakBackupLister(indexer cache.Indexer) KeycloakBackupLister {
	return &keycloakBackupLister{indexer: indexer}
}

// List lists all KeycloakBackups in the indexer.
func (s *keycloakBackupLister) List(selector labels.Selector) (ret []*v1alpha1.KeycloakBackup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeycloakBackup))
	})
	return ret, err
}

// KeycloakBackups returns an object that can list and get KeycloakBackups.
func (s *keycloakBackupLister) KeycloakBackups(namespace string) KeycloakBackupNamespaceLister {
	return keycloakBackupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KeycloakBackupNamespaceLister helps list and get KeycloakBackups.
// All objects returned here must be treated as read-only.
type KeycloakBackupNamespaceLister interface {
	// List lists all KeycloakBackups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeycloakBackup, err error)
	// Get retrieves the KeycloakBackup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KeycloakBackup, error)
	KeycloakBackupNamespaceListerExpansion
}

// keycloakBackupNamespaceLister implements the KeycloakBackupNamespaceLister
// interface.
type keycloakBackupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KeycloakBackups in the indexer for a given namespace.
func (s keycloakBackupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KeycloakBackup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeycloakBackup))
	})
	return ret, err
}

// Get retrieves the KeycloakBackup from the indexer for a given namespace and name.
func (s keycloakBackupNamespaceLister) Get(name string) (*v1alpha1.KeycloakBackup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("keycloakbackup"), name)
	}
	return obj.(*v1alpha1.KeycloakBackup), nil
}
