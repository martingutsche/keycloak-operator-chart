// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/keycloak/keycloak-operator/pkg/apis/keycloak/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KeycloakUserLister helps list KeycloakUsers.
// All objects returned here must be treated as read-only.
type KeycloakUserLister interface {
	// List lists all KeycloakUsers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeycloakUser, err error)
	// KeycloakUsers returns an object that can list and get KeycloakUsers.
	KeycloakUsers(namespace string) KeycloakUserNamespaceLister
	KeycloakUserListerExpansion
}

// keycloakUserLister implements the KeycloakUserLister interface.
type keycloakUserLister struct {
	indexer cache.Indexer
}

// NewKeycloakUserLister returns a new KeycloakUserLister.
func NewKeycloakUserLister(indexer cache.Indexer) KeycloakUserLister {
	return &keycloakUserLister{indexer: indexer}
}

// List lists all KeycloakUsers in the indexer.
func (s *keycloakUserLister) List(selector labels.Selector) (ret []*v1alpha1.KeycloakUser, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeycloakUser))
	})
	return ret, err
}

// KeycloakUsers returns an object that can list and get KeycloakUsers.
func (s *keycloakUserLister) KeycloakUsers(namespace string) KeycloakUserNamespaceLister {
	return keycloakUserNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KeycloakUserNamespaceLister helps list and get KeycloakUsers.
// All objects returned here must be treated as read-only.
type KeycloakUserNamespaceLister interface {
	// List lists all KeycloakUsers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeycloakUser, err error)
	// Get retrieves the KeycloakUser from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KeycloakUser, error)
	KeycloakUserNamespaceListerExpansion
}

// keycloakUserNamespaceLister implements the KeycloakUserNamespaceLister
// interface.
type keycloakUserNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KeycloakUsers in the indexer for a given namespace.
func (s keycloakUserNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KeycloakUser, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeycloakUser))
	})
	return ret, err
}

// Get retrieves the KeycloakUser from the indexer for a given namespace and name.
func (s keycloakUserNamespaceLister) Get(name string) (*v1alpha1.KeycloakUser, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("keycloakuser"), name)
	}
	return obj.(*v1alpha1.KeycloakUser), nil
}
